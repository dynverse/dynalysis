% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/suite_benchmark_submit.R
\name{benchmark_submit}
\alias{benchmark_submit}
\title{A benchmark suite with which to run all the methods on the different datasets}
\usage{
benchmark_submit(design, metrics = "correlation",
  qsub_grouping = "{method_id}/{param_id}", qsub_params = list(timeout
  = 3600, memory = "10G"), verbose = TRUE, output_models = TRUE)
}
\arguments{
\item{design}{Design tibble of the experiment, created by \code{\link[=benchmark_generate_design]{benchmark_generate_design()}}.}

\item{metrics}{Which metrics to evaluate; see \code{\link[=calculate_metrics]{calculate_metrics()}} for a list of which metrics are available.}

\item{qsub_grouping}{A character used to partition the design into separate jobs. Any of the column names
in \code{design$crossing} is allowed to be used. This string will later be parsed by \code{\link[glue:glue]{glue::glue()}}.}

\item{qsub_params}{A list used to define execution parameters for each row in the design tibble.
\code{memory} is used to define the amount of memory, \code{timeout} is used to define the maximum wall time.
Optionally, a function in the format \code{function(XXX, YYY, ...) { ZZZ }} is possible, where XXX and YYY
are equal to the groups defined by \code{qsub_grouping} (default \code{method_id} and \code{param_id}),
and ZZZ is equal to some logic which always produces a \code{list(memory = ..., timeout = ...)}.}

\item{verbose}{Whether or not to print extra information.}
}
\description{
A benchmark suite with which to run all the methods on the different datasets
}
\examples{
\dontrun{
library(tibble)

datasets <- c("synthetic/dyntoy/bifurcating_1", "synthetic/dyntoy/bifurcating_2")
methods <- dynmethods::methods$id

design <- benchmark_generate_design(
  datasets = datasets,
  methods = methods
)

benchmark_submit(
  design = design,
  metrics = c("correlation", "rf_mse"),
  qsub_grouping = "{method_id}/{replicate_ix}",
  qsub_params = function(method_id, replicate_ix) {
    params <- lst(memory = "10G", timeout = 3600)
    if (method_id == "scorpius") params$memory <- "5G"
    params
  }
)
}
}
